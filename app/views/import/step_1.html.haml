#pp_pinterest_import_wrapper{:data => {:all_pins => Pin.step_one_json(@external_boards.map(&:pins).flatten)}}

  #pinterest_section
    - if @external_boards.length > 1
      .importing_boards
        %h2
          Your Pinterest Boards
          %i{tooltip("Click a board to show only its pins. Drag a board to move all its pins.", :class => 'icon-question-sign')}
        %ul
          %li.board.board-all.selected{:data => {:class => 'board-all'}} Show All Pins
          - @external_boards.each do |board|
            %li.board{:data => {:class => "board-#{board.id}"}}
              %span.board_name= board.name
              %span.counter
        .clear
      

    .pin_lists{:class => @external_boards.length > 1 ? '' : 'no-boards'}
      %h2 
        Your Pinterest Pins
        %i{tooltip("Assign the pins you want to import to a ParentPins board by dragging them.", :class => 'icon-question-sign')}
      .importing_pins.previously_imported{'data-initial' => "#{Pin.json_for_pins(user_signed_in? ? current_user.pins : [])}"}
        %h3 
          Pins previously imported
          = link_to_function '(hide)', 'return false', :id => 'ppTogglePreviouslyImportedPins'
        %ul.collection.clearfix
    
      .importing_pins.not_yet_imported
        %h3 Pins not yet imported
        %ul.collection.clearfix
          - @external_boards.each do |board|
            - board.pins.each do |pin|
              %li.pin.board-all{:class => "board-#{board.id}", :data => {'pin-external-id' => pin.external_id, 'pin-url' => pin.url, 'pin-image' => pin.cached_remote_image_url}}
                .thumb= image_tag (pin.cached_remote_small_image_url.blank? ? pin.cached_remote_image_url : pin.cached_remote_small_image_url) || pin.image.url, :alt => "Pin Image"
                .clearfix

      .clear
    .clear
  .clear

  #our_section
    %h2
      Your ParentPin Boards
    %ul.boards
      - if user_signed_in? && current_user.boards.empty?
        .no-pp-boards
          You'll need to 
          = link_to 'add at least one ParentPins board', new_profile_board_path(current_user), :class => 'ajax'
          before importing pins.
      - (user_signed_in? ? current_user.boards : []).each do |board|
        = render 'our_board', :board => board
    .clearfix

  .buttons_section
    .left
      = link_to 'Add new board', new_profile_board_path(current_user), :class => 'ajax'

      = link_to_function "Reset Drag/Drop", 'return false', :id => 'ppResetDragDropLink'
      
    
    .right
      = form_tag pin_import_step_2_path, :target => "_blank", :id => 'ppSubmitBoardsSortedForm' do
        = hidden_field_tag :data_string
        = hidden_field_tag :source, @data[:source]
        = submit_tag 'Import These Pins', :id => 'ppSubmitBoardsSortedLink', :class => 'btn tertiary_action'
      
    .clearfix
  .clearfix
