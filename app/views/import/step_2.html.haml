%h1 
  Importing #{pluralize @pins_to_import.length, 'pin', 'pins'} to
  #{@boards.length == 1 ? 'one board' : "#{@boards.length} boards"}
%p{ :style => 'margin:0 0 0 24px;padding:0;'}
  Please complete the information for each pin below to finish importing your pins.
= form_for :import, :url => pin_import_step_2_path, :html => {:class => 'import_form'} do |f|
  %ul.importing_boards
    - @boards.each do |board|
      = f.fields_for "boards[#{board.id}]", board do |b|
        %li.importing_board
          .board_info
            %h3= board.name
            = image_tag board.cover.url
          %ul.importing_pins
            - @pins_to_import.select{|p| p.board_id == board.id}.each_with_index do |pin, idx|
              = b.fields_for "pins[#{idx}]", pin do |p|
                %li.importing_pin{:class => cycle('even', 'odd'), :id => "board_#{board.id}_pin_#{idx}"}
                  - if pin.errors.count > 0
                    .pin_errors= pin.errors.full_messages.uniq.map(&:downcase).to_sentence.capitalize
                  .pin_photo
                    = image_tag pin.remote_image_url || pin.cached_remote_image_url
                    .open_close_controls
                      = link_to_function 'Remove from Import', "toggleImportingThisPin(this)"
                    
                  .pin_info{:id => "board_#{board.id}_pin_#{idx}_pin_info"}
                    .status_boxes
                      .status_box.ageGroupStatus Age
                      .status_box.pinTypeStatus Type
                      .status_box.otherStatus Other
                    = p.hidden_field :remote_image_url, :value => pin.remote_image_url || pin.cached_remote_image_url
                    = p.hidden_field :smallImageURL, :value => pin.cached_remote_small_image_url
                    = p.hidden_field :external_id
                    = p.hidden_field :via_url
                    .line
                      %strong Age Group
                      = p.select :age_group_id, [['Select an Age Group', '']] + select_options(AgeGroup.all), {}, :class => 'age_group_id'
                    .line
                      %strong Pin Kind
                      - Pin::VALID_TYPES.each do |kind|
                        %label.radio_opt
                          = p.radio_button :kind, kind, :class => 'pin_type'
                          = kind.titleize
                    .line.field-price.hidden
                      %strong 
                        Price
                        %span (optional)
                      = p.text_field :price
                    .line
                      %strong Pin Link
                      = p.text_field :url, :class => 'other_input'
                    .line
                      %strong Pin Description
                      = p.text_area :description, :class => 'other_input'
                  .clearfix
  .form_button_bar 
    %span.js-if-post-message.hidden
      = link_to_function 'Go Back and Modify Selection', 'backToStepOne()', :style => 'display:block;float:left;padding:12px;'

    = f.submit 'Import Pins', :class => 'btn tertiary_action'
.clearfix

- if @imported
  - content_for :footer_js do
    :javascript
      importedPins("#{escape_javascript Pin.json_for_pins(@imported)}");